unit UClassRestConsumer;

interface

uses Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, IPPeerClient, System.Json, REST.Client, Data.Bind.Components,
  Data.Bind.ObjectScope,

  REST.Types;

type
  TRestConsumer = class(TPersistent)

  private
    FRESTRequest: TRESTRequest;
    FRESTResponse: TRESTResponse;
    FRESTClient: TRESTClient;

    procedure preparaObjetos();

    property RESTRequest: TRESTRequest read FRESTRequest write FRESTRequest;
    property RESTResponse: TRESTResponse read FRESTResponse write FRESTResponse;
    property RESTClient: TRESTClient read FRESTClient write FRESTClient;

    constructor Create overload;
    destructor Destroy;

  end;

implementation

uses Data.DBXJSONReflect;

{ TRestClient }

constructor TRestConsumer.Create;
begin

  Self.FRESTRequest := TRESTRequest.Create(nil);
  Self.FRESTResponse := TRESTResponse.Create(nil);
  Self.FRESTClient := TRESTClient.Create(nil);

end;

destructor TRestConsumer.Destroy;
begin
  Self.FRESTRequest.Destroy;
  Self.FRESTResponse.Destroy;
  Self.FRESTClient.Destroy;
  inherited;
end;

procedure TRestConsumer.preparaObjetos;
begin

  Self.FRESTClient.Accept :=
    'application/json, text/plain; q=0.9, text/html;q=0.8,';
  Self.FRESTClient.AcceptCharset := 'UTF-8, *;q=0.8';
  Self.FRESTClient.BaseURL := 'https://www.receitaws.com.br/v1/cnpj';
  Self.FRESTClient.RaiseExceptionOn500 := False;

  Self.FRESTResponse.ContentType := 'application/json';

  FRESTRequest.Client := FRESTClient;
  FRESTRequest.Response := FRESTResponse;
  FRESTRequest.SynchronizedEvents := False;

end;

end.
